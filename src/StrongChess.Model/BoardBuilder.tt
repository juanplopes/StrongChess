using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace StrongChess.Model
{
    public partial struct BoardBuilder
    {
<# for(var i=0; i<64; i++) { #>
        public BoardBuilder <#=(char)('A'+(i%8))#><#=(i/8)+1#> { get { return And(new Square(<#=i#>)); } }
<# } #>

<# for(var i=0; i<8; i++) { #>
        public BoardBuilder Rank<#=i+1#> { get { return And(new Rank(<#=i#>)); } }
<# } #>

<# for(var i=0; i<8; i++) { #>
        public BoardBuilder File<#=(char)(i+'A')#> { get { return And(new File(<#=i#>)); } }
<# } #>


		public BoardBuilder DiagonalA1H8 { get { return And(new DiagonalNE(7)); } }
		public BoardBuilder DiagonalH1A8 { get { return And(new DiagonalNW(7)); } }
<# for(var i=1; i<8; i++) { #>
        public BoardBuilder DiagonalA<#=i+1#><#=(char)('H'-i)#>8 { get { return And(new DiagonalNE(<#=7-i#>)); } }
        public BoardBuilder Diagonal<#=(char)('A'+i)#>1H<#=8-i#> { get { return And(new DiagonalNE(<#=7+i#>)); } }
        public BoardBuilder DiagonalH<#=i+1#><#=(char)('A'+i)#>8 { get { return And(new DiagonalNW(<#=7+i#>)); } }
        public BoardBuilder Diagonal<#=(char)('H'-i)#>1A<#=8-i#> { get { return And(new DiagonalNW(<#=7-i#>)); } }
<# } #>

    }
}
